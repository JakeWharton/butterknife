apply plugin: 'com.github.ben-manes.versions'

buildscript {
  ext.versions = [
      'minSdk': 14,
      'compileSdk': 27,

      'supportLibrary': '27.0.2',
      'androidPlugin': '3.1.0-alpha09',
      'androidTools': '26.1.0-alpha09',
      'kotlin': '1.2.21',

      'release': '8.8.1',
  ]

  ext.deps = [
      android: [
          'runtime': 'com.google.android:android:4.1.1.4',
          'gradlePlugin': "com.android.tools.build:gradle:${versions.androidPlugin}",
      ],
      'support': [
          'compat': "com.android.support:support-compat:${versions.supportLibrary}",
          'annotations': "com.android.support:support-annotations:${versions.supportLibrary}",
          'test': [
              'runner': 'com.android.support.test:runner:1.0.1',
          ],
      ],
      'androidx': [
          'annotations': "androidx.annotation:annotation:1.0.0-rc02",
      ],
      'lint': [
          'core': "com.android.tools.lint:lint:${versions.androidTools}",
          'api': "com.android.tools.lint:lint-api:${versions.androidTools}",
          'checks': "com.android.tools.lint:lint-checks:${versions.androidTools}",
          'tests': "com.android.tools.lint:lint-tests:${versions.androidTools}",
      ],
      javapoet: 'com.squareup:javapoet:1.10.0',
      javaparser: 'com.github.javaparser:javaparser-core:3.5.14',
      junit: 'junit:junit:4.12',
      truth: 'com.google.truth:truth:0.39',
      robolectric: 'org.robolectric:robolectric:3.7.1',
      compiletesting: 'com.google.testing.compile:compile-testing:0.15',
      'auto': [
          'service': 'com.google.auto.service:auto-service:1.0-rc4',
          'common': 'com.google.auto:auto-common:0.10',
      ],
      'guava': 'com.google.guava:guava:24.0-jre',
      'release': [
          'runtime': "com.jakewharton:butterknife:${versions.release}",
          'compiler': "com.jakewharton:butterknife-compiler:${versions.release}",
          'gradlePlugin': "com.jakewharton:butterknife-gradle-plugin:${versions.release}"
      ],
      'kotlin': [
          'stdLibJre8': "org.jetbrains.kotlin:kotlin-stdlib-jre8:${versions.kotlin}",
          'reflect': "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
      ]
  ]

  repositories {
    mavenCentral()
    jcenter()
    google()
  }

  dependencies {
    classpath deps.android.gradlePlugin
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
  }
}

subprojects { project ->
  group = GROUP
  version = VERSION_NAME

  repositories {
    mavenCentral()
    google()
    jcenter()
  }

  if (project.name != 'butterknife-gradle-plugin') {
    apply plugin: 'checkstyle'

    task checkstyle(type: Checkstyle) {
      configFile rootProject.file('checkstyle.xml')
      source 'src/main/java'
      ignoreFailures false
      showViolations true
      include '**/*.java'

      classpath = files()
    }

    afterEvaluate {
      if (project.tasks.findByName('check')) {
        check.dependsOn('checkstyle')
      }
    }
  }

  project.tasks.withType(JavaCompile) {
    it.options.with {
      setCompilerArgs(getCompilerArgs() + [
        // strict compilation, treat all warnings as errors
        '-Werror',
        // enable all warnings
        '-Xlint:all',
        // hide warning: [options] bootstrap class path not set in conjunction with -source 1.7
        '-Xlint:-options',
        // hide warning: No processor claimed any of these annotations: android.support.annotation.Nullable
        '-Xlint:-processing'
      ])
    }
  }

  project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
      verbose = true
      allWarningsAsErrors = true
    }
  }
}
